{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TON\\\\dream-builder\\\\src\\\\ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 2;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","scene","Scene","camera","PerspectiveCamera","current","clientWidth","clientHeight","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TON/dream-builder/src/ThreeScene.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ThreeScene = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      mountRef.current.clientWidth / mountRef.current.clientHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Add a cube\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    camera.position.z = 2;\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.01;\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ width: \"100%\", height: \"500px\" }} />;\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAiB,CACxC,EAAE,EACFJ,QAAQ,CAACK,OAAO,CAACC,WAAW,GAAGN,QAAQ,CAACK,OAAO,CAACE,YAAY,EAC5D,GAAG,EACH,IACF,CAAC;IACD,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACV,QAAQ,CAACK,OAAO,CAACC,WAAW,EAAEN,QAAQ,CAACK,OAAO,CAACE,YAAY,CAAC;IAC7EP,QAAQ,CAACK,OAAO,CAACM,WAAW,CAACH,QAAQ,CAACI,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAIvB,KAAK,CAACwB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/Cd,KAAK,CAACmB,GAAG,CAACF,IAAI,CAAC;IAEff,MAAM,CAACkB,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,IAAI;MACvBnB,QAAQ,CAACoB,MAAM,CAAC3B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IACDoB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXvB,QAAQ,CAACK,OAAO,CAACwB,WAAW,CAACrB,QAAQ,CAACI,UAAU,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOf,OAAA;IAAKiC,GAAG,EAAE9B,QAAS;IAAC+B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1E,CAAC;AAACtC,EAAA,CAxCID,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}